name: Python package

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install --upgrade pip
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install package 
      run: |
        pip install .
    - name: Test with pytest
      run: |
        pip install .[test]
        pytest
    
  # build-and-deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: 3.6
  #   - name: Install dependencies
  #     run: |
  #       pip install --upgrade pip
  #   - name: Lint with flake8
  #     run: |
  #       pip install flake8
  #       # stop the build if there are Python syntax errors or undefined names
  #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #       # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  #   - name: Install package 
  #     run: |
  #       pip install .
  #   - name: Test with pytest
  #     run: |
  #       pip install .[test]
  #       pytest
  #   - name: Install pep517
  #     run: >-
  #       pip install
  #       pep517
  #       --user
  #   - name: Build a binary wheel and a source tarball
  #     run: >-
  #       python -m
  #       pep517.build
  #       --source
  #       --binary
  #       --out-dir dist/
  #       .
    # - name: Publish distribution to Test PyPI
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     user: __token__
    #     password: ${{ secrets.test_pypi_password }}
    #     repository_url: https://test.pypi.org/legacy/
    # - name: Publish distribution to PyPI
    #   if: startsWith(github.event.ref, 'refs/tags')
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     user: __token__
    #     password: ${{ secrets.pypi_password }}